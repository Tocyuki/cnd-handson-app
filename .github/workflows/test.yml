name: Test

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  GO_VERSION: 1.24.3
  PYTHON_VERSION: 3.12

jobs:
  typescript-test:
    name: TypeScript Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, bff]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node
      
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: pnpm install
      
      - name: Test
        working-directory: ${{ matrix.service }}
        run: pnpm test

  go-test:
    name: Go Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [project, user, session, board, task]
        include:
          - service: project
            path: backend/project
          - service: user
            path: backend/user
          - service: session
            path: backend/session
          - service: board
            path: backend/board
          - service: task
            path: backend/task

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: ${{ matrix.path }}/go.sum

      - name: Install dependencies
        working-directory: ./${{ matrix.path }}
        run: go mod download
      
      - name: Test
        working-directory: ./${{ matrix.path }}
        env:
          CGO_ENABLED: 0
        run: go test ./... -v
  
  python-test:
    name: Python Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [column, role]
        include:
          - service: column
            path: backend/column
          - service: role
            path: backend/role
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./${{ matrix.path }}
        run: |
          pip install -r requirements.txt

      - name: Test
        working-directory: ./${{ matrix.path }}
        run: pytest