name: Lint and Format

on:
  push:
    branches-ignore: [ main ]

jobs:
  typescript-lint-format:
    name: TypeScript lint and format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, bff]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node
      
      - name: Install dependencies
        run: |
          # Install root dependencies for Biome
          pnpm install
          # Install service dependencies
          cd ./${{ matrix.service }}
          pnpm install
      
      - name: Lint with Biome
        run: npx @biomejs/biome lint ./${{ matrix.service }}/src/
      
      - name: Format check with Biome
        run: npx @biomejs/biome format ./${{ matrix.service }}/src/ --write=false --verbose
  
  go-lint-format:
    name: Go lint and format
    runs-on: ubuntu-latest
    strategy:
      matrix:
          service: [project, user, session, board, column, role, tag, task]
          include:
            - service: project
              path: backend/project
            - service: user
              path: backend/user
            - service: session
              path: backend/session
            - service: board
              path: backend/board
            - service: column
              path: backend/column
            - service: role
              path: backend/role
            - service: tag
              path: backend/tag
            - service: task
              path: backend/task
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: ./${{ matrix.path }}/go.sum
          
      - name: Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          working-directory: ./${{ matrix.path }}

      - name: Format
        working-directory: ./${{ matrix.path }}
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Code is not formatted with gofmt:"
            gofmt -d .
            exit 1
          fi