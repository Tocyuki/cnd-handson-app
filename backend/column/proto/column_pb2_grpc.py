# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from proto import column_pb2 as proto_dot_column__pb2

GRPC_GENERATED_VERSION = "1.71.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in proto/column_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class ColumnServiceStub(object):
    """================================
    サービス定義
    ================================

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateColumn = channel.unary_unary(
            "/column.ColumnService/CreateColumn",
            request_serializer=proto_dot_column__pb2.CreateColumnRequest.SerializeToString,
            response_deserializer=proto_dot_column__pb2.ColumnResponse.FromString,
            _registered_method=True,
        )
        self.GetColumn = channel.unary_unary(
            "/column.ColumnService/GetColumn",
            request_serializer=proto_dot_column__pb2.GetColumnRequest.SerializeToString,
            response_deserializer=proto_dot_column__pb2.ColumnResponse.FromString,
            _registered_method=True,
        )
        self.UpdateColumn = channel.unary_unary(
            "/column.ColumnService/UpdateColumn",
            request_serializer=proto_dot_column__pb2.UpdateColumnRequest.SerializeToString,
            response_deserializer=proto_dot_column__pb2.ColumnResponse.FromString,
            _registered_method=True,
        )
        self.DeleteColumn = channel.unary_unary(
            "/column.ColumnService/DeleteColumn",
            request_serializer=proto_dot_column__pb2.DeleteColumnRequest.SerializeToString,
            response_deserializer=proto_dot_column__pb2.DeleteColumnResponse.FromString,
            _registered_method=True,
        )
        self.ListColumns = channel.unary_unary(
            "/column.ColumnService/ListColumns",
            request_serializer=proto_dot_column__pb2.ListColumnsRequest.SerializeToString,
            response_deserializer=proto_dot_column__pb2.ListColumnsResponse.FromString,
            _registered_method=True,
        )


class ColumnServiceServicer(object):
    """================================
    サービス定義
    ================================

    """

    def CreateColumn(self, request, context):
        """Columnの生成"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetColumn(self, request, context):
        """Columnの取得"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateColumn(self, request, context):
        """Columnの更新"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteColumn(self, request, context):
        """Columnの削除"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListColumns(self, request, context):
        """Columnの一覧取得"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ColumnServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateColumn": grpc.unary_unary_rpc_method_handler(
            servicer.CreateColumn,
            request_deserializer=proto_dot_column__pb2.CreateColumnRequest.FromString,
            response_serializer=proto_dot_column__pb2.ColumnResponse.SerializeToString,
        ),
        "GetColumn": grpc.unary_unary_rpc_method_handler(
            servicer.GetColumn,
            request_deserializer=proto_dot_column__pb2.GetColumnRequest.FromString,
            response_serializer=proto_dot_column__pb2.ColumnResponse.SerializeToString,
        ),
        "UpdateColumn": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateColumn,
            request_deserializer=proto_dot_column__pb2.UpdateColumnRequest.FromString,
            response_serializer=proto_dot_column__pb2.ColumnResponse.SerializeToString,
        ),
        "DeleteColumn": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteColumn,
            request_deserializer=proto_dot_column__pb2.DeleteColumnRequest.FromString,
            response_serializer=proto_dot_column__pb2.DeleteColumnResponse.SerializeToString,
        ),
        "ListColumns": grpc.unary_unary_rpc_method_handler(
            servicer.ListColumns,
            request_deserializer=proto_dot_column__pb2.ListColumnsRequest.FromString,
            response_serializer=proto_dot_column__pb2.ListColumnsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "column.ColumnService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("column.ColumnService", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class ColumnService(object):
    """================================
    サービス定義
    ================================

    """

    @staticmethod
    def CreateColumn(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/column.ColumnService/CreateColumn",
            proto_dot_column__pb2.CreateColumnRequest.SerializeToString,
            proto_dot_column__pb2.ColumnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetColumn(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/column.ColumnService/GetColumn",
            proto_dot_column__pb2.GetColumnRequest.SerializeToString,
            proto_dot_column__pb2.ColumnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateColumn(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/column.ColumnService/UpdateColumn",
            proto_dot_column__pb2.UpdateColumnRequest.SerializeToString,
            proto_dot_column__pb2.ColumnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteColumn(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/column.ColumnService/DeleteColumn",
            proto_dot_column__pb2.DeleteColumnRequest.SerializeToString,
            proto_dot_column__pb2.DeleteColumnResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ListColumns(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/column.ColumnService/ListColumns",
            proto_dot_column__pb2.ListColumnsRequest.SerializeToString,
            proto_dot_column__pb2.ListColumnsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
